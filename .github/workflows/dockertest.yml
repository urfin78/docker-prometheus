name: Docker image test
on: 
  pull_request:
    branches:
    - master
  push:
    branches-ignore:
    - master

jobs:
  build:
    name: buildtest
    runs-on: ubuntu-latest
    env:
      VERSION: main
      TAGVERSION: latest
      AVAILABLE: false
    strategy:
      matrix:
        VERSION: [main, last_upstream]
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Get latest prometheus release
      run: |
        export PROMETHEUS_LATEST=$(curl -s "https://api.github.com/repos/prometheus/prometheus/releases" | grep -Po '"tag_name": "\K.*?(?=")'|head -1)
        echo "VERSION=$PROMETHEUS_LATEST" >> ${GITHUB_ENV}
        echo "TAGVERSION=$PROMETHEUS_LATEST" >> ${GITHUB_ENV}
        echo "AVAILABLE=true" >> ${GITHUB_ENV}
      shell: bash
      if: matrix.VERSION == 'last_upstream'
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2.1.0
    
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2.5.0
    
    - name: Run Buildx
      run: |
        docker buildx build \
          --rm \
          --platform linux/amd64 \
          --build-arg VERSION=$VERSION \
          --load \
          --tag prometheus:${TAGVERSION}-amd64 \
          --file ./Dockerfile .
        docker buildx build \
        --rm \
        --platform linux/386 \
        --build-arg VERSION=$VERSION \
        --load \
        --tag prometheus:${TAGVERSION}-386 \
        --file ./Dockerfile .
    - name: Test image
      run: |
        docker run -p 127.0.0.1:9999:9090 -d --name test prometheus:${TAGVERSION}-amd64
        sleep 10
        if [[ ! "$(curl -s http://127.0.0.1:9999/metrics|grep -E '^.*prometheus_build_info\{.*'|awk '{print $2}')" == "1" ]];then echo "ERROR";exit 1;else echo "OK";fi
